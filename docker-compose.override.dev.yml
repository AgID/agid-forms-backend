version: "3.4"

services:
  minio:
    volumes:
      - miniovol:/data

  # hasura:
  #   networks:
  #     app-tier:
  #       ipv4_address: 10.5.0.5

  redis:
    volumes:
      - redisvol:/bitnami/redis/data

  postgresql:
    volumes:
      - postgresqlvol:/bitnami/postgresql
      - walvol:/bitnami/wal-logs
      - backupvol:/db-backups
      - ./scripts/ipa-import-local.sh:/ipa-import-local.sh
      - ./scripts/backup-db.sh:/backup-db.sh
      - ./scripts/cleanup-hasura-events.sh:/cleanup-hasura-events.sh

  hasura:
    ports:
      - ${HASURA_EXTERNAL_PORT}:${HASURA_PORT}

  agid-forms-backend:
    image: node:10.18.1-alpine
    volumes:
      - .:/usr/src/app
    command: ["yarn", "hot-reload"]
    working_dir: "/usr/src/app"

  agid-forms-backend-processor:
    image: node:10.18.1-alpine
    volumes:
      - .:/usr/src/app
    command: ["yarn", "run-processor:reload"]
    working_dir: "/usr/src/app"

  agid-forms-backend-uploads:
    image: node:10.18.1-alpine
    volumes:
      - .:/usr/src/app
    command: ["yarn", "run-uploads:reload"]
    working_dir: "/usr/src/app"

  traefik:
    command: |-
      --api
      --api.dashboard=true
      --debug=false
      --loglevel=ERROR
      --retry
      --defaultentrypoints=http
      --entryPoints='Name:traefik Address::${TRAEFIK_DASHBOARD_PORT} Auth.Basic.Users:${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD}'
      --entryPoints='Name:http Address::80'
      --docker
      --docker.endpoint="unix:///var/run/docker.sock"
      --docker.domain=${TRAEFIK_DOMAIN}
      --docker.watch=true
      --docker.exposedbydefault=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./local/acme.json:/acme.json

volumes:
  postgresqlvol:
  walvol:
  redisvol:
  backupvol:
  miniovol:
#
#
# networks:
#   app-tier:
#     ipam:
#       config:
#         - subnet: 10.5.0.0/16
# #         gateway: 10.5.0.1
